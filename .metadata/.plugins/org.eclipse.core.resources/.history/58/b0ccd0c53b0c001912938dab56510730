import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;


public class Main {
	
	static int V, E, K;
	static int[] dist;	
	static boolean[] visited;
//	static int[][] adj;
	static ArrayList<Integer>[] matrix;
	
	public static void main(String[] args) throws FileNotFoundException {
		System.setIn(new FileInputStream("res/input.txt"));
		
		Scanner sc = new Scanner(System.in);
		
		V = sc.nextInt();
		E = sc.nextInt();
		K = sc.nextInt();
		
		dist = new int[V+1];
		visited = new boolean[V+1];
		matrix = new Integer[V+1];
//		adj = new int[V+1][V+1];
		for(int i=0;i<=V;i++) {
//			Arrays.fill(adj[i], -1);	
		}
		
		
		Arrays.fill(dist, Integer.MAX_VALUE);
		Arrays.fill(visited, false);
		
		for (int i=0;i<E;i++) {
			int u, v, w;
			u = sc.nextInt();
			v = sc.nextInt();
			w = sc.nextInt();
//			adj[u][v] = w;
		}
		
		dijkstra(K);
		
		for(int i=1;i<=V;i++) {
			if (i==K) {
				System.out.println(0);	
			} else if(dist[i] == Integer.MAX_VALUE) {
				System.out.println("INF");
			} else {
				System.out.println(dist[i]);
			}
		}
	}
	
	static void dijkstra(int start) {
		dist[start] = 0;
		for (int x=0;x<V;x++) {
			int index = 0;
			int min = Integer.MAX_VALUE;
			
			for (int j = 1;j<=V;j++) {
				if (visited[j] == false && dist[j] < min) {
					index = j;
					min = dist[j];
				}
			}
			visited[index] = true;
			for (int i=1;i<=V;i++) {
//				if (adj[index][i] != -1 && dist[i] > dist[index] + adj[index][i]) {
//					dist[i] = dist[index] + adj[index][i];
//				}
			}
		}
		
	}
}
